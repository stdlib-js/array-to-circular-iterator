{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isCollection = require( '@stdlib/assert-is-collection' );\nvar isObject = require( '@stdlib/assert-is-plain-object' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar isAccessorArray = require( '@stdlib/array-base-assert-is-accessor-array' );\nvar iteratorSymbol = require( '@stdlib/symbol-iterator' );\nvar accessorGetter = require( '@stdlib/array-base-accessor-getter' );\nvar getter = require( '@stdlib/array-base-getter' );\nvar dtype = require( '@stdlib/array-dtype' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns an iterator which repeatedly iterates over each element in an array-like object.\n*\n* @param {Collection} src - input value\n* @param {Options} [options] - function options\n* @param {NonNegativeInteger} [options.iter] - number of iterations\n* @param {integer} [options.dir=1] - iteration direction\n* @param {Function} [mapFcn] - function to invoke for each iterated value\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\nfunction circarray2iterator( src ) {\n\tvar thisArg;\n\tvar options;\n\tvar count;\n\tvar opts;\n\tvar iter;\n\tvar FLG;\n\tvar fcn;\n\tvar get;\n\tvar dt;\n\tvar i;\n\tif ( !isCollection( src ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', src ) );\n\t}\n\topts = {\n\t\t'iter': 1e308, // ~infinity\n\t\t'dir': 1       // left to right iteration\n\t};\n\tif ( arguments.length > 1 ) {\n\t\tif ( isObject( arguments[ 1 ] ) ) {\n\t\t\toptions = arguments[ 1 ];\n\t\t\tif ( arguments.length > 2 ) {\n\t\t\t\tfcn = arguments[ 2 ];\n\t\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. Callback argument must be a function. Value: `%s`.', fcn ) );\n\t\t\t\t}\n\t\t\t\tthisArg = arguments[ 3 ];\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'iter' ) ) {\n\t\t\t\topts.iter = options.iter;\n\t\t\t\tif ( !isNonNegativeInteger( options.iter ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a nonnegative integer. Option: `%s`.', 'iter', options.iter ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( hasOwnProp( options, 'dir' ) ) {\n\t\t\t\topts.dir = options.dir;\n\t\t\t\tif ( options.dir !== 1 && options.dir !== -1 ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be either `1` or `-1`. Option: `%s`.', 'dir', options.dir ) );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfcn = arguments[ 1 ];\n\t\t\tif ( !isFunction( fcn ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be either a function or an options object. Value: `%s`.', fcn ) );\n\t\t\t}\n\t\t\tthisArg = arguments[ 2 ];\n\t\t}\n\t}\n\tcount = 0;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tif ( fcn ) {\n\t\tif ( opts.dir === 1 ) {\n\t\t\ti = -1;\n\t\t\tsetReadOnly( iter, 'next', next1a );\n\t\t} else {\n\t\t\ti = src.length;\n\t\t\tsetReadOnly( iter, 'next', next1b );\n\t\t}\n\t} else if ( opts.dir === 1 ) {\n\t\ti = -1;\n\t\tsetReadOnly( iter, 'next', next2a );\n\t} else {\n\t\ti = src.length;\n\t\tsetReadOnly( iter, 'next', next2b );\n\t}\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\t// Resolve an accessor for retrieving array elements (e.g., to accommodate `Complex64Array`, etc):\n\tdt = dtype( src );\n\tif ( isAccessorArray( src ) ) {\n\t\tget = accessorGetter( dt );\n\t} else {\n\t\tget = getter( dt );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next1b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': fcn.call( thisArg, get( src, i ), i, count, src ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2a() {\n\t\ti = (i+1) % src.length;\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next2b() {\n\t\ti -= 1;\n\t\tif ( i < 0 ) {\n\t\t\ti += src.length;\n\t\t}\n\t\tcount += 1;\n\t\tif ( FLG || count > opts.iter || src.length === 0 ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'value': get( src, i ),\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\tif ( fcn ) {\n\t\t\treturn circarray2iterator( src, opts, fcn, thisArg );\n\t\t}\n\t\treturn circarray2iterator( src, opts );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = circarray2iterator;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Create an iterator which repeatedly iterates over the elements of an array-like object.\n*\n* @module @stdlib/array-to-circular-iterator\n*\n* @example\n* var circarray2iterator = require( '@stdlib/array-to-circular-iterator' );\n*\n* var iter = circarray2iterator( [ 1, 2, 3, 4 ] );\n*\n* var v = iter.next().value;\n* // returns 1\n*\n* v = iter.next().value;\n* // returns 2\n*\n* v = iter.next().value;\n* // returns 3\n*\n* // ...\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "setReadOnly", "hasOwnProp", "isFunction", "isCollection", "isObject", "isNonNegativeInteger", "isAccessorArray", "iteratorSymbol", "accessorGetter", "getter", "dtype", "format", "circarray2iterator", "src", "thisArg", "options", "count", "opts", "iter", "FLG", "fcn", "get", "dt", "i", "next1a", "next1b", "next2a", "next2b", "end", "factory", "value", "main"]
}
